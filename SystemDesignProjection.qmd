---
title: "System Design - Projection"
author: "Terry Doner"
date: "`r format(Sys.time(), '%B %d %Y')`"
execute: 
  eval: true
  echo: false
  warning: false
  message: false
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: right
    number-sections: true
  pdf:
    number-sections: true 
    toc: true
    toc-depth: 2
always_allow_html: yes
---

```{r packages}
source("commonPackages.R")

require(formattable)
```

```{r functions}
source("commonFunctions.R")
```

```{r data }
NetworkInventory <- get.network()
Tech_Inventory   <- get.inventory()
further          <- get.further() 
```

# Introduction

This document provides key technical documentation for the video subsystems at UAC. @fig-overview provides a simplified overview of the major components in the system. Subsequent sections provide more detail.

```{dot overview}
//| fig-width: 4
//| label: fig-overview
//| fig-cap: "Projection Overview"
//| file: gv/sdv-topology0-overview.gv
```

# ProPresenter

ProPresenter generates 7 physical video outputs, and those are five of the 8 inputs into the video matrix. It also has one [NDI](https://sites.google.com/view/buzz-sparky-and-flip/articles/video/ndi-overview) output which is a network interface.

* Three outputs are the triple wide video outputs which are normally routed directly to the front of house (FoH) projectors. This is via the Decklink.

* Two outputs are specifically to feed the ATEM video mixer. This pair of feeds are called a *Key* and *Fill.* The *Fill* looks like a normal single wide image. The *Key* is a mask which the ATEM uses to select which parts of the *Fill* are to be displayed. An area on the *Key* which is white is displayed. An area which is black, is transparent. Areas which a grey are semi-transparent, the darker the grey, the more transparent is that portion.

* One output is the stage display via the Decklink.

* An HDMI output which can be used when the decklink outputs are not appropriate.  

* The NDI output is a copy of the stage display that is sent out over the network and provides key status information to the audio engineer running the livestream.  

## Decklink

The Decklink card is connected to the computer via a USBC/Thunderbolt cable. It is configured using a program called *Desktop Video*. It can provide up to 8 video outputs, but we configure it for 6 outputs.
 
The Decklink outputs are special purpose outputs which are not recognized by the Mac Operating system. So you cannot do things like DVD playback or Safari Web Page display on those outputs. You can use the hdmi output for that, with corresponding routing changes on the video matrix.

::: callout-note
See the document *deepdive_displaying_a_web_page_within_pp7.docx* for instructions on how to display a browser webpage via ProPresenter.
:::

```{dot pp_and_decklink}
//| fig-width: 4
//| label: fig-ProPresenter-and-decklink
//| fig-cap: "ProPresenter and Decklink Configurations"
//| file: gv/sdv-decklink_ProPresenter.gv
```

:::callout-note
As of September 2023, the video inputs to the decklink are not fully implemented.
:::

[Back to top](#top)

# Video Matrix

The main job of a video matrix is to take multiple video sources, such as cameras or computers, and direct their video signals to different destinations, like TVs, projectors, or recording devices.

Our video matrix is a Kramer VS-88DT which is an 8x8 matrix and can handle HDMI inputs and both HDMI and [HDBaseT](https://en.wikipedia.org/wiki/HDBaseT) formats. Any of the 8 inputs can be routed to any of the 8 outputs (or several outputs).

It can be controlled via the buttons on the front panel or from its built in web page.

```{r psi}
psi <- tribble(
~Input, ~Usage, ~Comment,
1,
"TW A",
"The left most third of the ProPresenter triple wide display from the decklink (sdi4). Usually routed to the East projector.",

2, 
"TW B",
"The centre third of the ProPresenter triple wide display from the decklink (sdi6). Usually routed to the Centre projector",

3,
"TW C",
"The right most third of the ProPresenter triple wide display from the decklink (sdi8). Usually routed to the West projector",

4,
"Stage Display",
"The stage display from ProPresenter via the decklink (sdi3). Usually routed to the rear projector.",

5,
"CDWU-0009",
"Source is Windows machine which can run Powerpoint and OBS. Not usually used.",

6,
"ATEM Program",
"The Program feed from the ATEM, a copy of what is also streamed. Usually routed to the Lobby TV and the TVs downstairs.",

7, 
"ATEM Auxillary",
"Auxillary feed from the ATEM video mixer. Not usually used but could be used to source different video content from the ATEM. For example a static graphic for the centre projector.",

8,
"CDMU-A001 HDMI",
"The Video output from the HDMI output from CDMU-A001. This would be used as a video source from that computer when a system display is required.")

psi |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Matrix Inputs" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=Input)
	) |>
  cols_width(
    Comment ~ pct(70),
    Usage   ~ pct(15),
    Input  ~ pct(15)
  )
```

```{r pso}
pso <- tribble(
~Output, ~Type, ~Usage, ~Comment,
"1", "HDBaseT", 
"East Projector",
"Front of House projector - Stage Right / East wall.",

"2",  "HDBaseT",
"Centre Projector",
"Front of House projector - Stage Centre / South wall.",

"3",  "HDBaseT",
"West Projector",
"Front of House projector - Stage Left / West wall.",

"4", "HDBaseT", 
"Rear Projector",
"Projector which projects onto the rear wall in balcony. Lyrics for singers, etc.",

"5", "HDMI" ,
"Feed to ATEM","Secondary feed to Video Mixer. Destination is to the video mixer so projected content can be mixed with camera â€“ Picture-in-Picture, etc.",

"6", NA,
"unused","unused",

"7",  "HDBaseT",
"Lobby","Feed to the Lobby TV.",


"8" ,  "HDBaseT",
"Nursery", "Feed to the Nursery TV."

)

pso |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Matrix Outputs" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=Output)
	) |>
	tab_footnote("A potential future output would be an audio feed to the Audio mix console, or a decklink input.", 
				 locations=cells_body(
				 	columns=Comment , 
				 	rows= Output==6)) |>
  cols_width(
    Comment ~ pct(55),
    Usage   ~ pct(15),
    Type    ~ pct(15),
    Output  ~ pct(15)
  ) |>
	tab_options(table.width=pct(100))
```

[Back to top](#top)

## Video Matrix Configurations

The current matrix routing can be queried and changed using either the webpage or the front panel.

The LCD display on the front of the unit report the current routing topology. The Output row shows the number of the input which is selected for that output. A '0' indicated no source has been selected. Here are two sample configurations.

### Sample Configurations
Here are some common configurations to use and some ideas abuot when to use them. The detailed setings are in the table @tbl-vmsc that follows.

Full_TW
: Use this when you want triple wide capability. 

Centre_ATEM_AUX
: Use this when you want to use the ATEM Aux output as a source. An common example of this is a static graphic on the centre screen. This could also be done using the Full_TW with a prop on the centre screen which is never cleared.

Centre_ATEM_Prg
: Use this when you want live camera on the centre screen. 

All_three_HDMI
: Use this when you want the conputers HDMI output to be routed to the projectors. For example, playing a DVD. It could also be a fallback if there is a problem with the triple wide system.

```{r samp_cfg}
samp_cfg <- tribble(
~Num,
~Output, ~Full_TW, ~Centre_ATEM_AUX, ~Centre_ATEM_Prg, ~All_three_HDMI,
1, "ProjEast",	1,	1,	1,	8,
2, "ProjCent",	2,	7,	6,	8,
3, "ProjWest",	3,	3,	3,	8,
4, "RearProj",	4,	4,	4,	4,
5, "ATEM In 1", 	8,	8,	8,	8,
6, "not used",	4,	4,	4,	4,
7, "Lobby"  ,	6,	6,	6,	6,
8, "Nursery",	6,	6,	6,	6
)
```

```{r tbl-vmsc}
#| label: tbl-vmsc
#| tbl-cap: Video Matrix Sample Configurations
samp_cfg |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Matrix Sample Configurations" 
			  , subtitle="Settings which are differnt from Full_TW are in Yellow." ) |>
    tab_style(  
      style = list(  cell_fill(color = "yellow")  ),
      locations = cells_body(columns = Centre_ATEM_AUX,
      					     rows = Num == 2   )
	) |>
    tab_style(  
      style = list(  cell_fill(color = "yellow")  ),
      locations = cells_body(columns = Centre_ATEM_Prg,
      					     rows = Num == 2   )
	) |>
    tab_style(  
      style = list(  cell_fill(color = "yellow")  ),
      locations = cells_body(columns = All_three_HDMI,
      					     rows = Num %in% c(1,2,3)   )
	)
```

[Back to top](#top)

# Topologies

There are a lot of components to the system. One big diagram is daunting. It has been broken down into smaller portions to be more consumable.

[Back to top](#top)

## Computer Topology

There are three computers in the system:

CDMU-A001 MacOS / ProPresenter

:   This system runs ProPresenter and has a built in operator display, and a displayport output to the datapath video processor which split the output to three separate video signals for the front projectors, and a separate video output that drives the rear confidence montitor. It also has Powerpoint for Mac and Keynote installed.

CUMU-G001 MacOS / ATEM - OBS

:   This system runs the ATEM switcher software, and OBS (for distrbution of the ATEM program output over the network) and can also run things like Skype. It has a USBC-HDMI adapter that is *not* currently connected to Input 3 of the video mixer.

CDWU-0009 Windows / Mediashout

:   The windows system runs Mediashout and has a dual output video card. One is used for the operator display, and the second for presentation. It also has Powerpoint for Windows installed.

```{dot dot_top_comp}
//| fig-width: 4
//| label: fig-top-comp
//| fig-cap: "Computer Topology"
//| file: gv/sdv-topology1-computer.gv
```

```{r gt_topComp}
selected.at <- c(
              "CDWU-0009", "CDMU-A001", "CUMU-G001",
              "ZVKU-A001",  "ZVKU-A003" ,
              "ZVIU-A004", "ZVIU-E004") 

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

## Projection Topology

Long distance signal transmission is achieved using Cat5e or Cat6 cabling. An industry standard solution called HDBaseT is used.  All of our projectors have HDBaseT connections built in.  

```{dot top_proj}
//| fig-width: 4
//| label: fig-top-proj
//| fig-cap: "Projector Topology"
//| file: gv/sdv-topology2-projection.gv
```

```{r}
selected.at <- c(
              "ZVKU-A001", 
              "ZVVU-0001",
              "ZVVU-A001", "ZVVU-A002", "ZVVU-A003" 
              )

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 

```

[Back to top](#top)

## Lobby Topology

The TV in the lobby gets its content from the video matrix. For the main service it should get its feed from the video mixer program output. HDBaseT is used for this and also requires a converter at the TV to provide the HDMI format.

```{dot top_lobby}
//| fig-width: 4
//| label: fig-top-lobby
//| fig-cap: "Lobby Topology"
//| file: gv/sdv-topology3-lobby.gv
```

```{r topLobby}
selected.at <- c(
              "ZVKU-A001" , "ZVIU-A002", "ZVVU-0002"
              ) 

Tech_Inventory  |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

## Nursery/Toddler Topology

The TV in the nursery gets its content from the video matrix. For the main service it should get its feed from the video mixer program output. HDBaseT is used for this and also requires a converter at the TV to provide the HDMI format.

There is an HDMI splitter at the Nursery TV which provides an HDMI feed to the TV in the Toddler room.

Each TV has a remote control.

```{dot top_nursery}
//| fig-width: 4
//| label: fig-top-nursery
//| fig-cap: "Nursery Topology"
//| file: gv/sdv-topology4-nursery.gv
```

```{r top3}
selected.at <- c(
              "ZVKU-A001",  
              "ZVVU-0002", "2308-2900",
              "ZVIU-A002", "ZVVU-0003"
              )  

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```


[Back to top](#top)

## Recording Topology

The recording topology is quite complex and so it is broken up into peices.

### Inputs

```{dot top_rec-inputs}
//| fig-width: 4
//| label: fig-rec-inputs
//| fig-cap: "Recording Inputs Topology"
//| file: gv/sdv-topology5-rec-inputs.gv
```

### Outputs

```{dot top_rec-outputs}
//| fig-width: 4
//| label: fig-rec-outputs
//| fig-cap: "Recording Outputs Topology"
//| file: gv/sdv-topology5-rec-outputs.gv
```

### Web Presenter

There are some details on the signal path between the Video Mixer and the Web Presenter that need to be documented.

```{dot top_rec-wp}
//| fig-width: 4
//| label: fig-rec-wp
//| fig-cap: "WebPresenter Topology"
//| file: gv/sdv-topology6-rec-wp.gv
```

```{r}
selected.at <- c(
              "ZVKU-A001" , 
              "ZVCU-A001", "ZVCU-A002", "ZVCU-A003",
              "ZVKU-A003", "ZVKU-A004", 
              "ZVRU-A001", "ZVRU-A002",
              "ZVIU-A004",
              "CDMU-A002"
              ) 

Tech_Inventory|>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

The details of the network configuration are not shown. See the Network design document for technically accurate descriptions.

[Back to top](#top)

# Network Details

```{r}
NetworkInventory %>% 
filter(Category=="Video") %>% 
select(AssetTag, Location, Usage, Device, MAC, IP, URL, Notes) %>%
  arrange(AssetTag) |>
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Network Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

# Video Equipment Inventory

```{r inventory }
 
cs = c("AssetTag", "Qty"  ,
  "Manufacturer" ,
  "Model"  , 
  "Qty",
  "Location"  ,
  "Type" ,
  "Desc"     )

Video_Inventory <- Tech_Inventory %>%  
          filter( Category=="Video" , InService== "Y") %>%  
          dplyr::select(one_of(cs))   

Video_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Location, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

{{< include common_trailer.qmd >}}