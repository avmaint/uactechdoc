---
title: "System Design - Projection"
author: "Terry Doner"
date: "`r format(Sys.time(), '%B %d %Y')`"
execute: 
  eval: true
  echo: false
  warning: false
  message: false
format:
  html:
    toc: true
    number-sections: true
    css: styles.css
  pdf:
    number-sections: true 
    toc: true
    toc-depth: 2
always_allow_html: yes
---

```{r packages}
source("commonPackages.R")

require(formattable)
```

```{r functions}
source("commonFunctions.R")
```

```{r data, include=FALSE}
NetworkInventory <- get.network()
Tech_Inventory   <- get.inventory()
further          <- get.further() 
```

# Introduction

This document provides key technical documentation for the video subsystems at UAC. @fig-overview provides a simplified overview of the major components in the system.

```{dot overview}
//| fig-width: 4
//| label: fig-overview
//| fig-cap: "Projection Overview"
//| file: gv/sdv-topology0-overview.gv
```

# ProPresenter and DeckLink

ProPresenter generates 7 physical video outputs, and those are five of the 8 inputs into the video matrix.

-   Three of those outputs are the triple wide video outputs which are normally routed directly to the front of house (FoH) projectors. This is via the Decklink.

-   Two outputs are specifically to feed the ATEM video mixer. This pair of feeds are called a *Key* and *Fill.* The *Fill* looks like a normal single wide image. The *Key* is a mask which the ATEM uses to select which parts of the *Fill* are to be displayed. An area on the *Key* which is white is displayed. An area which is black, is transparent. Areas which a grey are semi-transparent, the darker the grey, the more transparent is that portion.

-   One output is the stage display. This is also via the Decklink.

-   Finally, there is a HDMI output.

The Decklink outputs are not recognized by the Mac Operating system. So you cannot do things like DVD playback or safari Web Page display on those outputs. You can use the hdmi output for that, with corresponding routing changes on the video matrix.

::: callout-note
See the document *deepdive_displaying_a_web_page_within_pp7.docx* for instructions on how to display a browser webpage via ProPresenter.
:::

The Decklink card is connected to the computer via a USBC/Thunderbolt cable. It is configured using a program called *Desktop Video*.

```{dot pp_and_decklink}
//| fig-width: 4
//| label: fig-propresenter-and-decklink
//| fig-cap: "ProPresenter and Decklink Configurations"
//| file: gv/sdv-decklink_propresenter.gv
```

:::callout-note
As of September 2023, the video inputs to the decklink are not fully implemented.
:::

# Video Matrix

The unit is a Kramer VS-88DT which is an 8x8 matrix and can handle both HDMI and HDBaseT formats. Any of the 8 inputs can be routed to any of the 8 outputs (or several outputs).

It can be controlled via the buttons on the front panel or from it's built in web page.

[Back to top](#top)

```{r psi}
psi <- tribble(
~Input, ~Usage, ~Comment,
1,
"FoH Left",
"Primary computer for video content (including audio).",

2, 
"FoH Centre",
"FUTURE. Alternate which can be used for backup. Advanced presentations and building video while Balcony 1 is in use. |",

3,
"FoH Right",
"Video input for guest computer. Can handle hdmi or VGA.",

4,
"Confidence",
"Video input for Confidence display (rear projector)",

5,
"Backup Presentation",
"Source is Windows running Mediashout and Powerpoint",

6,
"Guest",
"Input for a guest presenter to use.",

7, 
"Video Mix Auxillary",
"Auxillary feed from the ATEM video recording mixer",

8,
"Video Mix",
"Program output is from the ATEM Video Mixer. Use for FOH projection or building distribution.")

psi |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Matrix Inputs" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=Input)
	) 
```

```{r pso}
pso <- tribble(
~Output, ~Usage, ~Comment,
"1", "FoH Projector",
"Front of House projector - Stage Right / East wall.",

"2",
"FoH Projector",
"Front of House projector - Stage Centre / South wall.",

"3",
"FoH Projector",
"Front of House projector - Stage Left / West wall.",

"4", 
"Confidence",
"Projector which covers rear wall in balcony. Lyrics for singers, etc.",

"5", "VMix 4","Secondary feed to Video Mixer",

"6" , "Nursery", "Feed to the Nursery TV.",

"7","Lobby","Feed to the Lobby TV.",

"8","VMix 1","Destination is to the video mixer so projected content can be mixed with camera â€“ Picture-in-Picture, etc."
)

pso |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Matrix Outputs" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=Output)
	) 
```

> A potential future output would be an audio feed to the Audio mix console.

[Back to top](#top)

### Video Matrix Configurations

The LCD display on the front of the unit report the current routing topology. The Output row shows the number of the input which is selected for that output. A '0' indicated no source has been selected. Here are two sample configurations.

#### Normal Service Switcher Configuration

The display should look like:

| Input  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |
|--------|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
| Output |  1  |  2  |  3  |  4  |  1  |  8  |  8  |  2  |

```{dot ps_normal}
//| fig-width: 4
//| label: fig-ps-normal
//| fig-cap: "Normal Matrix"
//| file: gv/sdv-PSnormal.gv
```

[Back to top](#top)

## Topologies

There are a lot of components to the system. One big diagram is daunting. It has been broken down into smaller portions to be more consumable.

[Back to top](#top)

### Computer Topology

There are three computers in the system:

CDWU-0009 Windows / Mediashout

:   The windows system runs Mediashout and has a dual output video card. One is used for the operator display, and the second for presentation. It also has Powerpoint for Windows installed.

CDMU-A001 MacOS / ProPresenter

:   This system runs ProPresenter and has a built in operator display, and a displayport output to the datapath video processor which split the output to three separate video signals for the front projectors, and a separate video output that drives the rear confidence montitor. It also has Powerpoint for Mac and Keynote installed.

CUMU-G001 MacOS / ATEM - OBS

:   This system runs the ATEM switcher software, and OBS (for distrbution of the ATEM program output over the network) and can also run things like Skype. It has a USBC-HDMI adapter that is *not* currently connected to Input 3 of the video mixer.


```{dot top_comp}
//| fig-width: 4
//| label: fig-top-comp
//| fig-cap: "Computer Topology"
//| file: gv/sdv-topology1-computer.gv
```

```{r topComp}
selected.at <- c(
              "CDWU-0009", "CDMU-A001", "CUMU-G001",
              "ZVKU-A001", "ZVKU-A002" , "ZVKU-A003" ,
              "ZVIU-A004") 

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

### Projection Topology

Long distance signal transmission is achieved using Cat5 or Cat6 cabling. This used to require discrete transmitters and receviers, and those are in use for the front of house (FoH) projectors. But there is now a industry standard solution called HDBaseT which is now appearing on professional grade equipment; this is used for the read confidence projector and is why that portion of the diagram is so much simpler.

```{dot top_proj}
//| fig-width: 4
//| label: fig-top-proj
//| fig-cap: "Projector Topology"
//| file: gv/sdv-topology2-projection.gv
```

```{r}
selected.at <- c(
              "ZVKU-A001", 
              "ZVVU-0001",
              "ZVVU-A001", "ZVVU-A002", "ZVVU-A003", 
              "ZVVU-0004",  "ZVVU-0005"
              )

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 

```

[Back to top](#top)

### Lobby Topology

The TV in the lobby gets its content from the video matrix. For the main service it should get its feed from the video mixer program output.

```{dot top_lobby}
//| fig-width: 4
//| label: fig-top-lobby
//| fig-cap: "Lobby Topology"
//| file: gv/sdv-topology3-lobby.gv
```

```{r topLobby}
selected.at <- c(
              "ZVKU-A001" , "ZVIU-A002", "ZVVU-0003"
              ) 

Tech_Inventory  |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

### Nursery Topology

The TV in the nursery gets its content from the video matrix. For the main service it should get its feed from the video mixer program output.

```{dot top_nursery}
//| fig-width: 4
//| label: fig-top-nursery
//| fig-cap: "Nursery Topology"
//| file: gv/sdv-topology4-nursery.gv
```

```{r top3}
selected.at <- c(
              "ZVKU-A001", "ZVIU-A001", 
              "ZVVU-0002"
              )  

Tech_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 

```

The TV has a remote control.

[Back to top](#top)

### Recording Topology

The recording topology is quite complex and so it is broken up into peices.

#### Inputs

```{dot top_rec-inputs}
//| fig-width: 4
//| label: fig-rec-inputs
//| fig-cap: "Recording Inputs Topology"
//| file: gv/sdv-topology5-rec-inputs.gv
```

#### Outputs

```{dot top_rec-outputs}
//| fig-width: 4
//| label: fig-rec-outputs
//| fig-cap: "Recording Outputs Topology"
//| file: gv/sdv-topology5-rec-outputs.gv
```

#### Web Presenter

There are some details on the signal path between the Video Mixer and the Web Presenter that need to be documented.

```{dot top_rec-wp}
//| fig-width: 4
//| label: fig-rec-wp
//| fig-cap: "WebPresenter Topology"
//| file: gv/sdv-topology6-rec-wp.gv
```

```{r}
selected.at <- c(
              "ZVKU-A001" , 
              "ZVCU-A001", "ZVCU-A002", "ZVCU-A003",
              "ZVKU-A003", "ZVKU-A004", 
              "ZVRU-A001", "ZVRU-A002",
              "ZVIU-A004",
              "CDMU-A002"
              ) 

Tech_Inventory|>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

The details of the network configuration are not shown. See the Network design document for technically accurate descriptions.

[Back to top](#top)

# Network Details

```{r}
NetworkInventory %>% 
filter(Category=="Video") %>% 
select(AssetTag, Location, Usage, Device, MAC, IP, URL, Notes) %>%
  arrange(AssetTag) |>
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Network Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

# Video Equipment Inventory

```{r inventory, echo=FALSE, asis=TRUE}
 
cs = c("AssetTag", "Qty"  ,
  "Manufacturer" ,
  "Model"  , 
  "Qty",
  "Location"  ,
  "Type" ,
  "Desc"     )

Video_Inventory <- Tech_Inventory %>%  
          filter( Category=="Video" , InService== "Y") %>%  
          dplyr::select(one_of(cs))   

Video_Inventory |>
   filter( AssetTag %in% selected.at) |> 
    select(AssetTag, Manufacturer, Model, Desc ) |>
    arrange( AssetTag ) |> 
	gt() |>
	opt_stylize(style = 3) |>
	tab_header("Video Device Details" ) |>
	tab_style(
		style=list( cell_text(weight = "bold") ),
		locations=cells_body(columns=AssetTag)
	) 
```

[Back to top](#top)

`r knit_child('FurtherInformation.Rmd', quiet=TRUE)`

[Back to top](#top)

# Document Source

This document is compiled by merging text and data together using rmarkdown. The source is found here `r file.path(getwd(), knitr::current_input())`.

# Change History

```{r change_history}
commit.log.html( knitr::current_input() )
```
