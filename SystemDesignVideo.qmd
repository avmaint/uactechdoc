---
title: "System Design - Video"
execute: 
  eval: true
  echo: false
  warning: false
  message: false
format:
  html:
    toc: true
  pdf:
     toc: true
  titlepage-pdf:
    toc: true
   
always_allow_html: yes
---

```{r packages }
source('./commonPackages.R')
```

```{r functions}
source("./commonFunctions.R")
```

```{r getdata}
Tech_Inventory <- get.inventory()
network.data   <- get.network()
further        <- get.further()
```

# Introduction
This document provides key technical documentation for the video recording and broadcasting subsystems at UAC. This diagram (@fig-video-overview) provides an overview of the major components and and in doing so leaves out some details.

```{dot overview}
//| fig-width: 4
//| label: fig-video-overview
//| fig-cap: "Video system overview."
//| file: gv/sdv-topology0-overview.gv
```

Frequently throughout this document there will be a diagram or description of some aspect of the installation and following that a listing of the mentioned equipment which provide more detail on the mentioned assets.

Every significant inventory item is to have an asset tag - an actual label attached to the device. For the AV gear these tags start with a Z or in the format of yymm-ddxx. For example ZVKU-A001 is the assest tag of the kramer video matrix. Cabling aslo have a tag for the format yymm-ddxx. yymm-ddxx represents the year, month, and date followed by a sequence number when the item was tagged.

# Video Matrix

The main job of a video matrix is to take multiple video sources, such as cameras or computers, and direct their video signals to different destinations, like TVs, projectors, or recording devices.

Our video matrix is a Kramer VS-88DT which is an 8x8 matrix and can handle HDMI inputs and outputs which are either HDMI or [HDBaseT](https://en.wikipedia.org/wiki/HDBaseT) formats. Any of the 8 inputs can be routed to any of the 8 outputs (or several outputs).

The unit is a Kramer VS-88DT which is an 8x8 matrix and can handle both HDMI and HDBaseT formats.

It has 8 inputs and 8 outputs. It can be controlled via the buttons on the front panel or from itâ€™s built in web page.

```{r}
psi <- tribble(
  ~Input, ~Usage,       ~Comment,

1, "TW Left",       "Triple wide input Left (from PP via decklink)" ,
2, "TW Centre",     "Triple wide input Centre (from PP via decklink)", 
3, "TW Right",      "Triple wide input Right (from PP via decklink)",
4, "Confidence",    "Stage display from PP for the rear projector via decklink.",
5, "CDWU-0009",     "Video Output from Windows machine. Usually used for OBS.",
6, "VMixer Program", "Program output from Video Mixer",
7, "VMixer Aux",     "Aux output from Video Mixer",
8, "PP HDMI Output", "Used for times when programs other than PP need to be displayed, for example a DVD player." 
)

pso <- tribble(
    ~Output, ~Usage,       ~Comment,
1,
"FoH Prj Left", 
"Front of House projector - East wall",
2, 
"FoH Prj Centre",
"Front of House projector - South wall",
3, 
"FoH Prj Right",
"Front of House projector - West wall",
4,
"Confidence",
"Rear Balcony Projector (stage display from PP). Lyrics for singers, etc.",
5,
"Video Mix 1",
"Video mixer input 1 (typically input 1: Propresenter Screen A)",
6,
"Video Mix 2",
"Video mixer input 2 (typically input 7: cdwu-0009)",
7,
"Lobby",
"Feed to the Lobby TV",
8,
"Nursery",
"Feed to the Nursery TV"   
)
```

## Inputs

All inputs to the matrix are HDMI. An input can be routed to a one or more outputs at once.

```{r matrix_in, results='asis'}
#| tbl-cap: "Video Matrix Inputs"
#| tbl-cap-location: bottom
tab <- psi |>  
   gt() |>  
		opt_stylize(style = 3) |>
		tab_style(
			style = cell_text(
				weight = "bold", 
				),
			locations = cells_body(
				columns = "Input")
		) 
print_gt_table(tab) |> cat()
```

## Outputs

Each matrix output can be either HDMI or HDBaseT. Several typical configurations are discussed on the Operations document.   

```{r matrix_out, results='asis'}
#| tbl-cap: "Video Matrix Outputs"
#| tbl-cap-location: bottom
tab <- pso |> 
 gt() |>  
		opt_stylize(style = 3) |>
		tab_style(
			style = cell_text(
				weight = "bold", 
				),
			locations = cells_body(
				columns = "Output")
		) 
print_gt_table(tab) |> cat()
```

# Topologies
There are a lot of components to the system. One big diagram is daunting. The system description has been broken down into smaller portions to be more consumable. 

## Computer Topology

There are three computers in the system (See @fig-topology1-computer):

CDMU-A001 MacOS / ProPresenter / DVD Player
: This system runs ProPresenter and has multiple outputs:

* A built in operator display
* an hdmi output via dongle that is used for programs that need to show their output on a OS managed display. For example the DVD Player or Powerpoint
* Three outputs to the front projectors via the Decklink interface
* A Combo output of Fill and Key for the ATEM
* A stage display output to the rear display - via the decklink
* A Stage display output to the Audio Mixer in the Prayer Room via NDI 

CDWU-0009 Windows / OBS  
: This windows 10 system has a dual output video card. One is used for the operator display, and the second for presentation. It has Powerpoint for Windows installed.

CUMU-G001 MacOS / ATEM Control / OBS / ProPresenter
: This system runs the ATEM switcher software, and OBS (for prayer room monitoring) and can also run things like Zoom. Although it has an unused HDMI output via a dongle, it is not currently connected.

```{dot}
//| label: fig-topology1-computer
//| fig-cap: "Topology of video related computers"
//| file: gv/sdv-topology1-computer.gv
```

```{r topology1-computer, results='asis'}
# TODO: fix the code below.
#| label: tab-topology1-computer
#| fig-cap: "Computer Topology"

print_inv(c("CUMU-G001","CDMU-A001" , "ZVIU-E004"  
		     ), Tech_Inventory) |>
	print_gt_table() |>
    cat()
```

## Projection Topology
There are four projectors in the auditorium, three FoH and one at the rear for confidence. They are all feed an HDMI signal via HDBaseT (Over Cat6).

```{dot fig-topology-projection}
//| fig-width: 4
//| fig-height: 2
//| label: fig-topology-projection
//| fig-cap: "Topology of video projectors"
//| file: gv/sdv-topology2-projection.gv
```

```{r top2}
print_inv(c("ZVKU-A001","ZVVU-A001", "ZVVU-A002", "ZVVU-A003"
			, "ZVVU-0001", "2310-1700"),
          Tech_Inventory)
```

## Lobby Topology
The TV in the lobby gets its content from the video matrix. For the main service it should get its feed from the video mixer program output .

There is a network cable that also runs to the lobby TV, and is for future use.

```{dot}
//| fig-width: 4
//| fig-height: 2
//| label: fig-topology-lobby
//| fig-cap: "Topology for lobby TV"
//| file: gv/sdv-topology3-lobby.gv
```

```{r l132}
print_inv(c("ZVIU-A001", "ZVKU-A001"  ), Tech_Inventory)
```

>TODO: the above list is missing the lobby tv

* Diagrams and charts have been updated 
* Inventory database updated with the new locations.
* need to confirm what happened to ZVIU-A001 and ZVIU-A002

## Nursery Topology
The TV in the nursery gets its content from the video matrix. For the main service it should get its feed from the video mixer program output.

```{dot}
//| fig-width: 4
//| fig-height: 2
//| label: fig-topology-nursery
//| fig-cap: "Topology for nursery TV"
//| file: gv/sdv-topology4-nursery.gv
```

```{r top3_inv}
print_inv(c("ZVIU-A002", "ZVKU-A001","ZVVU-0002", "ZVVU-0003"), Tech_Inventory)
```

The TV has a remote control which is found on top of the coatrack near the TV, power on/off can be controlled directly using the button on the bottom centre of the screen.

## Recording / Livestream Topology
The recording topology is quite complex and so it is broken up into peices.

### Inputs

A key constraint for the ATEM video mixer is that all inputs must have the same input resolution settings. We have choosen 1080p59.94. 

```{dot}
//| fig-width: 4
//| fig-height: 2
//| label: fig-topology-recin
//| fig-cap: "Topology for recording inputs"
//| file: gv/sdv-topology5-rec-inputs.gv
```

### Outputs

```{dot fig-topology-recout}
//| fig-width: 4
//| fig-height: 2
//| label: fig-topology-recout
//| fig-cap: "Topology for Recording Outputs"
//| file: gv/sdv-topology5-rec-outputs.gv
```

### Web Presenter

The WebPresenter (see @fig-topology-webpres) converts its input (SDI or HDMI) to a usb webcam format which can be used by the computer (it also acts as a two-channel switch). 
 
```{dot fig-topology-webpres}
//| fig-width: 4
//| fig-height: 3
//| label: fig-topology-webpres
//| fig-cap: "Topology for Web Presenter"
//| file: gv/sdv-topology6-rec-wp.gv
``` 
 
```{r wp-inv}
print_inv(c("ZVKU-A004", "ZVKU-A001", "CUMU-G001",
           "ZVCU-A001", "ZVIU-C001",
           "ZVCU-A002", "ZVCU-A003", "ZVKU-A003",
           "ZVRU-A001", "ZVRU-A002", "ZVIU-A004"), Tech_Inventory)
```

# Network Details

```{r net-details, results='asis'} 
network.data %>% 
filter(Category=="Video") %>% 
select(AssetTag, Usage, Device, MAC, IP, URL, Notes) %>%
    gt( ) |>
			opt_stylize(style = 3) |>
    		tab_style(
			style = cell_text(
				weight = "bold", 
				),
			locations = cells_body(
				columns = "AssetTag")
		) |>
		tab_options(table.font.size="50%") |>
	print_gt_table() |>
	cat()
```

# Video Equipment Inventory

```{r inventory, echo=FALSE, asis=TRUE}

items <- Tech_Inventory %>%  
          filter( Category=="Video" ,
                  InService== "Y", !is.na(AssetTag)) %>%  
          select(AssetTag) %>%
          pull()
  
print_inv(items, Tech_Inventory)
```

>TODO need to add CUMU-G001 to the list

{{< include common_trailer.qmd >}}